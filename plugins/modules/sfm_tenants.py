#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for sfm_tenants
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type

ANSIBLE_METADATA = {
    'metadata_version': '1.1',
    'status': ['preview'],
    'supported_by': 'community',
    'license': 'Apache 2.0'
}

DOCUMENTATION = """
---
module: sfm_tenants
version_added: 1.0.0
short_description: Manages Tenants attributes of sfm configuration
description: This Module Manages Tenants attributes of sfm configuration
author: Baskaran Jeyapaul
notes:
  - Tested against sfm 1.0.0
options:
  config:
    description: List of sfm Tenants attributes configuration
    type: list
    elements: dict
    suboptions:
      tenant_id:
        type: str
        description: Tenant Identifier
      tenant_name:
        type: str
        description: Tenant Name
      description:
        type: str
        description: Tenant Description

  state:
    description:
    - The state of the configuration after module completion.
    type: str
    choices:
    - merged
    - deleted
    default: merged
"""
EXAMPLES = """
# Using deleted

# configuration example prior to module invocation

- name: Delete sfm Tenants attributes
  dellemc.sfm.sfm_tenants:
    config:
    state: deleted

# configuration example after module invocation


# Using merged

# configuration example prior to module invocation

#- name: Configure sfm Tenants attributes

# configuration example after module invocation


"""
RETURN = """
before:
  description: The configuration prior to the model invocation.
  returned: always
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
after:
  description: The resulting configuration model invocation.
  returned: when changed
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
commands:
  description: The set of commands pushed to the remote device.
  returned: always
  type: list
  sample: ['command 1', 'command 2', 'command 3']
"""


from ansible.module_utils.basic import AnsibleModule
from ansible_collections.dellemc.sfm.plugins.module_utils.network.sfm.argspec.tenants.tenants import TenantsArgs
from ansible_collections.dellemc.sfm.plugins.module_utils.network.sfm.config.tenants.tenants import Tenants


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=TenantsArgs.argument_spec,
                           supports_check_mode=True)

    result = Tenants(module).execute_module()
    module.exit_json(**result)


if __name__ == '__main__':
    main()
